name: publish

on:
  push:
    branches:
      - main
      - dev

run-name: ${{github.sha}}

jobs:
  prepare:
    runs-on: ubuntu-latest
    env:
      image_base: benfiola/single-player-tarkov
    concurrency:
      group: ${{github.workflow}}
    permissions:
      id-token: write
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: download versionctl
        run: |
          curl -fsSL -o /usr/local/bin/versionctl "https://github.com/benfiola/versionctl/releases/latest/download/versionctl-linux-amd64"
          chmod +x /usr/local/bin/versionctl
      - name: calculate facts
        id: facts
        run: |
          version="$(versionctl next)"
          tag="$(versionctl convert "${version}" git)"
          docker_image="${{env.image_base}}"
          docker_tag="$(versionctl convert "${version}" docker)"

          is_main="0"
          if [ "${{github.ref}}" = "refs/heads/main" ]; then
            is_main="1"
          fi

          echo "docker_image=${docker_image}" >> "${GITHUB_OUTPUT}"
          echo "docker_tag=${docker_tag}" >> "${GITHUB_OUTPUT}"
          echo "is_main=${is_main}" >> "${GITHUB_OUTPUT}"
          echo "tag=${tag}" >> "${GITHUB_OUTPUT}"
          echo "version=${version}" >> "${GITHUB_OUTPUT}"
      - name: create git tag
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{steps.facts.outputs.tag}}',
              sha: context.sha
            })
      - name: generate code
        run: |
          echo "${{steps.facts.outputs.version}}" > version.txt
      - name: upload source artifact
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          include-hidden-files: true
          name: source
          path: "*"
    outputs:
      docker_image: ${{steps.facts.outputs.docker_image}}
      docker_tag: ${{steps.facts.outputs.docker_tag}}
      is_main: ${{steps.facts.outputs.is_main}}
      tag: ${{steps.facts.outputs.tag}}
      version: ${{steps.facts.outputs.version}}

  publish:
    needs: [prepare]
    runs-on: ubuntu-latest
    environment:
      name: publish
    strategy:
      matrix:
        spt_server_version: ["3.10.5"]
    steps:
      - name: download source artifact
        uses: actions/download-artifact@v4
        with:
          pattern: source
          path: .
          merge-multiple: true
      - name: docker login
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: benfiola
          password: ${{secrets.DOCKER_TOKEN}}
      - name: docker build + push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          push: true
          tags: |
            ${{needs.prepare.outputs.docker_image}}:${{needs.prepare.outputs.docker_tag}}-spt${{matrix.spt_server_version}}
          build-args: |
            SPT_SERVER_VERSION=${{matrix.spt_server_version}}
      - name: docker build + push (latest)
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        if: "${{needs.prepare.outputs.is_main == '1'}}"
        with:
          context: .
          push: true
          tags: |
            ${{needs.prepare.outputs.docker_image}}:latest-spt${{matrix.spt_server_version}}
          build-args: |
            SPT_SERVER_VERSION=${{matrix.spt_server_version}}
